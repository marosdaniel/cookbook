import React, { useRef, useState } from 'react';
import { signIn } from 'next-auth/react';
import Head from 'next/head';
import NextLink from 'next/link';
import { redirect, useRouter } from 'next/navigation';

import { useAppDispatch } from '@/store/hooks';
import { setLoginState } from '@/store/Global/global';

import { Box, Typography, TextField, FormControlLabel, Checkbox, Button, Grid, Link as MUILink } from '@mui/material';
import GoogleIcon from '@mui/icons-material/Google';

import { Container } from './styles';

const SigninPage: React.FC = () => {
  const router = useRouter();
  const dispatch = useAppDispatch();
  const emailRef = useRef<HTMLInputElement>(null);
  const passwordRef = useRef<HTMLInputElement>(null);
  const formRef = useRef<HTMLFormElement>(null);
  const [isDisabledSubmit, setIsDisabledSubmit] = useState(false);

  const submitHandler = async (e: React.FormEvent<HTMLFormElement>) => {
    setIsDisabledSubmit(true);
    e.preventDefault();
    const email = emailRef.current?.value;
    const password = passwordRef.current?.value;

    // TODO: add validation
    if (!email || !password) {
      console.log('Email and password are required');
      setIsDisabledSubmit(false);
      return;
    }

    const result = await signIn('credentials', {
      email,
      password,
      redirect: false,
    });
    if (!result!.error) {
      if (formRef.current) {
        formRef.current.reset();
      }
      dispatch(setLoginState(true));
      router.push('/profile');
    }
    setIsDisabledSubmit(false);
  };

  return (
    <>
      <Head>
        <title>Sign in | CookBooK</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container>
        <Box
          sx={{
            marginTop: 8,
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'center',
          }}
        >
          <Typography component="h1" variant="h5">
            Sign in
          </Typography>

          <Box component="form" onSubmit={submitHandler} noValidate sx={{ mt: 1 }} ref={formRef}>
            <TextField
              margin="normal"
              required
              fullWidth
              id="email"
              label="Email Address"
              name="email"
              autoComplete="email"
              autoFocus
              inputRef={emailRef}
            />
            <TextField
              margin="normal"
              required
              fullWidth
              name="password"
              label="Password"
              type="password"
              id="password"
              autoComplete="current-password"
              inputRef={passwordRef}
              placeholder="asd123"
            />
            <FormControlLabel control={<Checkbox value="remember" color="primary" />} label="Remember me" />
            <Button type="submit" fullWidth variant="contained" sx={{ mt: 3, mb: 2 }} disabled={isDisabledSubmit}>
              Sign In
            </Button>
            <Button
              onClick={() => signIn('google')}
              type="submit"
              fullWidth
              variant="outlined"
              sx={{ mt: 3, mb: 2 }}
              disabled={isDisabledSubmit}
            >
              <GoogleIcon />
              OOGLE
            </Button>
            <Grid container>
              <Grid item xs>
                <MUILink variant="body2" component={NextLink} href="/signup">
                  forgot password?
                </MUILink>
              </Grid>
              <Grid item>
                <MUILink variant="body2" component={NextLink} href="/signup">
                  Dont you have an account? Sign UP
                </MUILink>
              </Grid>
            </Grid>
          </Box>
        </Box>
      </Container>
    </>
  );
};

export default SigninPage;
