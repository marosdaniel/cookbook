import React, { useRef, useState } from 'react';
import Head from 'next/head';
import NextLink from 'next/link';
import { Box, Typography, Grid, TextField, Button, Link as MUILink } from '@mui/material';

import { Container } from './styles';
import { createUser } from './utils';
import { redirect } from 'next/navigation';

const SignUpPage: React.FC = () => {
  const emailRef = useRef<HTMLInputElement>(null);
  const passwordRef = useRef<HTMLInputElement>(null);
  const formRef = useRef<HTMLFormElement>(null);
  const [isDisabledSubmit, setIsDisabledSubmit] = useState(false);

  const submitHandler = async (e: React.FormEvent<HTMLFormElement>) => {
    setIsDisabledSubmit(true);
    e.preventDefault();
    const email = emailRef.current?.value;
    const password = passwordRef.current?.value;

    // TODO: add validation
    if (!email || !password) {
      setIsDisabledSubmit(false);
      throw new Error('Email and password are required');
    }
    try {
      const result = await createUser(email, password);
      if (formRef.current) {
        formRef.current.reset();
      }
      console.log(result);
      redirect('/profile');
    } catch (err) {
      console.log(err);
    }

    setIsDisabledSubmit(false);
  };

  return (
    <>
      <Head>
        <title>Sign up | CookBooK</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <Box
          sx={{
            marginTop: 8,
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'center',
          }}
        >
          <Typography component="h1" variant="h5">
            REG
          </Typography>
          <Box component="form" noValidate onSubmit={submitHandler} sx={{ mt: 3 }} ref={formRef}>
            <Grid container spacing={2}>
              <Grid item xs={12} sm={6}>
                <TextField
                  autoComplete="given-name"
                  name="firstName"
                  fullWidth
                  id="firstName"
                  label="First Name"
                  autoFocus
                />
              </Grid>
              <Grid item xs={12} sm={6}>
                <TextField fullWidth id="lastName" label="Last Name" name="lastName" autoComplete="family-name" />
              </Grid>
              <Grid item xs={12}>
                <TextField
                  required
                  fullWidth
                  id="email"
                  label="Email Address"
                  name="email"
                  autoComplete="email"
                  inputRef={emailRef}
                />
              </Grid>
              <Grid item xs={12}>
                <TextField
                  required
                  fullWidth
                  name="password"
                  label="Password"
                  type="password"
                  id="password"
                  autoComplete="new-password"
                  inputRef={passwordRef}
                />
              </Grid>
            </Grid>
            <Button type="submit" fullWidth variant="contained" sx={{ mt: 3, mb: 2 }} disabled={isDisabledSubmit}>
              Sign Up
            </Button>
            <Grid container justifyContent="flex-end">
              <Grid item>
                <MUILink variant="body2" component={NextLink} href="/signin">
                  Already have an account? Sign in
                </MUILink>
              </Grid>
            </Grid>
          </Box>
        </Box>
      </Container>
    </>
  );
};

export default SignUpPage;
